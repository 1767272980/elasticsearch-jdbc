plugins {
    id "org.sonarqube" version "2.2"
    id "org.xbib.gradle.plugin.jbake" version "1.2.1"
}

printf "Host: %s\nOS: %s %s %s\nJVM: %s %s %s %s\nGroovy: %s\nGradle: %s\n" +
        "Build: group: ${project.group} name: ${project.name} version: ${project.version}\n",
        InetAddress.getLocalHost(),
        System.getProperty("os.name"),
        System.getProperty("os.arch"),
        System.getProperty("os.version"),
        System.getProperty("java.version"),
        System.getProperty("java.vm.version"),
        System.getProperty("java.vm.vendor"),
        System.getProperty("java.vm.name"),
        GroovySystem.getVersion(),
        gradle.gradleVersion

ext {
    scmUser = 'jprante'
    scmName = 'elasticsearch-jdbc'
    scmUrl = "https://github.com/${scmUser}/${scmName}"
    scmConnection = "scm:git:git://github.com/${scmUser}/${scmName}.git"
    scmDeveloperConnection = "scm:git:git://github.com/${scmUser}/${scmName}.git"
}

repositories {
    mavenCentral()
}

apply plugin: 'build-dashboard'

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'checkstyle'
    apply plugin: "jacoco"

    repositories {
        mavenCentral()
    }

    configurations {
        wagon
    }

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.apache.logging.log4j:log4j-core:2.7'
        testCompile 'org.apache.logging.log4j:log4j-jul:2.7'
        wagon 'org.apache.maven.wagon:wagon-ssh-external:2.10'
    }

    test {
        testLogging {
            showStandardStreams = false
            exceptionFormat = 'full'
        }
        systemProperty 'java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager'
    }

    checkstyle {
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    }

    apply from: rootProject.file('gradle/sonarqube.gradle')
    apply from: rootProject.file('gradle/publish.gradle')
}
